#standart params file for multi objective.
# crossover: simulated binary crossover with prob = 1 and eta = 20
# mutation: polynomial mutation with prob = 1/genomeSize(popSize) and distIndex = 20
# selection: tournament selection with size 2
# populationsize: 100
# generations: 100 => 10.000 evaluations
# NSGAII breeder, in ecj lambda = mu
# minimizes by default
#




#parameters for the Evolve Object:
verbosity	= 1
flush		= true
store		= true

breedthreads	= 6
evalthreads	    = 6
seed.0		    = time
seed.1		    = 123423456
seed.2		    = 25486
seed.3		    = 35482
seed.4		    = 1256644
seed.5		    = 12342345


state		    = ec.simple.SimpleEvolutionState



#the parameters for the SimpleEvolutionState Object                                                             #CHANGES: breeder
pop		    = ec.Population
init		= ec.simple.SimpleInitializer
finish		= ec.simple.SimpleFinisher

breed =	ec.multiobjective.nsga2.NSGA2Breeder

eval		= ec.simple.SimpleEvaluator
exch		= ec.simple.SimpleExchanger
#additional Parameters for SimpleEvolutionState:
generations		        = 100
quit-on-run-complete	= false
checkpoint		        = false
checkpoint-prefix	    = ec
checkpoint-modulo	    = 1
accumulate-mutation-impact = true

# Use a statistics object which dumps the front:
#stat =                                          ec.multiobjective.MultiObjectiveStatistics
#stat.front =                                    $front.stat
#stat.do-hypervolume =				true
#stat.reference-point = 0.0 0.0



#define some population parameters
pop.subpops		                = 1
pop.subpop.0		            = ec.Subpopulation
pop.subpop.0.size 		        = 100
pop.subpop.0.duplicate-retries 	= 5
pop.subpop.0.species 		    = ec.vector.FloatVectorSpecies
pop.subpop.0.species.ind	    = ec.vector.TraceableDoubleVectorIndividual


#define the representation parameters                                                                           #CHANGES: mutation-type/prob
pop.subpop.0.species.crossover-type	= sbx
pop.subpop.0.species.crossover-distribution-index = 20
pop.subpop.0.species.mutation-type = polynomial
pop.subpop.0.species.alternative-polynomial-version = true
pop.subpop.0.species.mutation-distribution-index = 20
pop.subpop.0.species.mutation-bounded = true
pop.subpop.0.species.out-of-bounds-retries = 5
pop.subpop.0.species.mutation-prob	= 0.5




#define the fitness:
pop.subpop.0.species.fitness =				ec.multiobjective.nsga2.NSGA2MultiObjectiveFitness
pop.subpop.0.species.fitness.maximize = false



#define the breeding procedure for the SimpleBreeder                                                            #CHANGES
pop.subpop.0.species.pipe			                     = ec.vector.breed.VectorMutationPipeline
pop.subpop.0.species.pipe.source.0	                 = ec.vector.breed.VectorCrossoverPipeline
pop.subpop.0.species.pipe.source.0.source.0	             = ec.select.TournamentSelection
pop.subpop.0.species.pipe.source.0.source.1         	 = ec.select.TournamentSelection
pop.subpop.0.species.pipe.source.0.source.0.size	     = 2
pop.subpop.0.species.pipe.source.0.source.1.size	     = 2
#breed.elite.0                                            = 2



#this must be self defined:
# the problem to be evaluated
# the number of objectives
# the genome size
# bounds of the genome

